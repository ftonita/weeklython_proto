from classic_utils import *

from pyrogram import Client, filters, types
import tgcrypto
import asyncio
import random

from main import *
from mysql_utils import *

code = [123456]


START_CMD = "/start"

HELLO_TXT = "–ü—Ä–∏–≤–µ—Ç, —è - –±–æ—Ç –®–∫–æ–ª—ã 21 –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≥–æ—Å—Ç–µ–π –≤ —à–∫–æ–ª—É. –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π —à–∫–æ–ª—å–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º, –ª–∏–±–æ —à–∫–æ–ª—å–Ω—É—é –ø–æ—á—Ç—É (@student.21-school.ru - –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, @21-school.ru - –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞)"

STUD_MAIL_ADDRESS = "@student.21-school.ru"
SCH_MAIL_ADDRESS = "@21-school.ru"
MAIL_HAS_SENT = "–í–≤–µ–¥–∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –ø–æ—á—Ç—É!"

CREATE_PASS_BUTTON = "‚úÖ–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–ø—É—Å–∫"
VIEW_MY_PASS_BUTTON = "üìÑ–ú–æ–∏ –ø—Ä–æ–ø—É—Å–∫–∏"

api_id = 10439243 #API id
api_hash = "a98d30318fc4d1cd274bc750fa34c8b9" #API hash
bot_token = "5761358088:AAGoBiwLt69qRkI439sKdfCz__tCS3jRLNk"

app = Client(
	"21passbot",
	api_id=api_id,
	api_hash=api_hash,
	bot_token=bot_token
)

active_users = []

async def getUserState(user_id):
	if len(database_select_user(user_id)) > 6:
		return 2
	state = database_select_from_temp(user_id)
	if state == "":
		return int(-1)
	else:
		return int(state[1])

async def simpleMessage(message, text):
	await app.send_message(message.chat.id, text)

@app.on_message(filters.all)
async def message_handler(client, message):
	if message.from_user.id not in active_users:
		active_users.append(message.from_user.id)
		print("new active user")
	try:
		text = str(message.text)
	except:
		pass
# –ó–î–ï–°–¨ –ë–£–î–ï–¢ –ü–†–û–í–ï–†–ö–ê –ù–ê –ù–ê–õ–ò–ß–ò–ï –Æ–ó–ï–†–ê –í –ë–î
	state = int(await getUserState(message.from_user.id))
	user = User()
	user.user_id = message.from_user.id
	if state == -1:
		if text == START_CMD:
			await simpleMessage(message, HELLO_TXT)
			insertUserToTemp(message.from_user.id)
	elif state == 0:
		if STUD_MAIL_ADDRESS in text or SCH_MAIL_ADDRESS in text:
			await simpleMessage(message, MAIL_HAS_SENT)
			print_log(text)
			user.email = text
			user.nickname = text.split("@")[0]
			code[0] = random.randint(100000, 999999)
			print_log("code: " + str(code[0]))
			# –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
			setUserState(message.from_user.id, 1)
	elif state == 1:
			if text == str(code[0]):
				create_pass_button = types.KeyboardButton(CREATE_PASS_BUTTON)
				my_passes_button = types.KeyboardButton(VIEW_MY_PASS_BUTTON)
				markup = types.ReplyKeyboardMarkup(keyboard=[[create_pass_button, my_passes_button]], resize_keyboard=True)
				user = User()
				user.campus = 2
				user.full_name = "Secret"
				user.verified = 1
				user.role = 1
				database_add_user(user)
				setUserState(message.from_user.id, 2)
				await app.send_message(message.chat.id, "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", reply_markup=markup)
			else:
				await app.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!")
	elif state >= 2:
		if text == CREATE_PASS_BUTTON:
			await simpleMessage(message, "–í–≤–µ–¥–∏ –§–ò–û –≥–æ—Å—Ç—è! –ï—Å–ª–∏ –≥–æ—Å—Ç–µ–π –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø–∏—à–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n–í–∞–∂–Ω–æ: –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ–¥–Ω–æ–π –∏–∑ —á–∞—Å—Ç–∏ –∏–º–µ–Ω–∏ —Ç–µ–±–µ –º–æ–≥—É—Ç –û–¢–ö–ê–ó–ê–¢–¨ –≤ –ø—Ä–æ–ø—É—Å–∫–µ!")
		elif text == VIEW_MY_PASS_BUTTON:
			await simpleMessage(message, "–°–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤")
		else:
			create_pass_button = types.KeyboardButton(CREATE_PASS_BUTTON)
			my_passes_button = types.KeyboardButton(VIEW_MY_PASS_BUTTON)
			markup = types.ReplyKeyboardMarkup(keyboard=[[create_pass_button, my_passes_button]], resize_keyboard=True)
			await app.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!", reply_markup=markup)
